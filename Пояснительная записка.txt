
Мы решили реализовать расширенную систему работы со статусами заказа, реализовав с их помощью события оплаты и продажи Заказа :
При создании заказ получает статус "Черновик". Заказ в этом статусе может быть удален (например, как ошибочно заведенный).
Следующий статус - "Бронь" , заказ в этом статусе может быть отменен с указанием причины отмены либо оплачен.
Следующий статус - "Оплата", заказ в этом статусе генерирует документ "Оплата" согласно ТЗ.
Следующий статус - "Продажа", заказ в этом статусе генерирует документ "Продажа" согласно ТЗ и фиксирует наличие или отсутствие брони Отеля.
При смене статуса фиксируется дата. Текущий статус документа отображается в таблице заказов.

Дополнительные улучшения

Мы решили, что со временем некоторых сущностей может стать так много, что искать их глазами в таблице станет неудобно, поэтому реализовали поиск по основным значимым полям
1. В форме  "Список контактов" поиск возможен тремя способами : либо по фамилии, либо по имени, либо по эл.почте, но не все разом. Кнопка "поиск" срабатывает при нажатии ENTER.
2. В форме "Список клиентов" фильтр отвечает за нахождение клиента по его названию или по части имени его контактного лица (кнопка "поиск" срабатывает при нажатии ENTER).
3. В форме "Список отелей" поиск возможен по их названию и местонахождению.
4. В Форме "Список заказов" поиск заказа осуществляется по имени клиента, виду оплаты и по статусу.





Особенности
5. Программа использует Entity Framework Core в связке с Sqlite, и соответственно для её работы необходима среда исполнения .NET 6.0 Desktop Runtime (не включена в данный релиз).
6. Данные хранятся в файле TravelCompanyCoreStorage.db и инициализируются значениями, жёстко прописанными в коде, при создании БД (например, в случае отсутствия указанного файла в рабочем каталоге при старте программы).
7. В форме "Заказ тура" редактирование цены и изменение количества человек производится непосредственно в гриде. Активация соответствующего поля в строке производится двойным щелчком мыши, либо клавишей F2.